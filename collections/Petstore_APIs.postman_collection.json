{
	"info": {
		"_postman_id": "0169f958-55fc-4dbd-858b-8387cba91d96",
		"name": "Petstore APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33430131"
	},
	"item": [
		{
			"name": "Add a new pet to Store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains the pet ID\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(12345);\r",
							"});\r",
							"\r",
							"pm.test(\"Pet name matches\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"doggie\");\r",
							"});\r",
							"\r",
							"pm.test(\"Pet status is 'available'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"available\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 12345,\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"Dogs\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"https://example.com/dog.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"pet\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Find Pets by Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test 1: Verify the status code is 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Verify response is an array\r",
							"pm.test(\"Response is an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});\r",
							"\r",
							"// Test 3: Verify all pets in the response have the requested status\r",
							"pm.test(\"All pets have the requested status\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var requestedStatus = pm.request.url.query.find(q => q.key === \"status\").value;\r",
							"    jsonData.forEach(function (pet) {\r",
							"        pm.expect(pet.status).to.eql(requestedStatus);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test 4: Verify each object contains required fields\r",
							"pm.test(\"Each pet object contains required fields\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    jsonData.forEach(function (pet) {\r",
							"        pm.expect(pet).to.have.property(\"id\");\r",
							"        pm.expect(pet).to.have.property(\"name\");\r",
							"        pm.expect(pet).to.have.property(\"status\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/findByStatus/?status=available",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"findByStatus",
						""
					],
					"query": [
						{
							"key": "status",
							"value": "available"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Existing Pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body matches the request body\", function () {\r",
							"    var requestBody = JSON.parse(pm.request.body.raw);\r",
							"    var responseBody = pm.response.json();\r",
							"\r",
							"    pm.expect(responseBody).to.deep.equal(requestBody);\r",
							"});\r",
							"\r",
							"pm.test(\"Error handling for invalid inputs\", function () {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(pm.response.text()).to.include(\"Invalid ID supplied\");\r",
							"    } else if (pm.response.code === 404) {\r",
							"        pm.expect(pm.response.text()).to.include(\"Pet not found\");\r",
							"    } else if (pm.response.code === 405) {\r",
							"        pm.expect(pm.response.text()).to.include(\"Validation exception\");\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains required fields\", function () {\r",
							"    var responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property(\"id\");\r",
							"    pm.expect(responseBody).to.have.property(\"name\");\r",
							"    pm.expect(responseBody).to.have.property(\"status\");\r",
							"    pm.expect(responseBody).to.have.property(\"photoUrls\").that.is.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 9222968140497181000,\r\n    \"category\": {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    },\r\n    \"name\": \"Puff\",\r\n    \"photoUrls\": [\r\n      \"string\"\r\n    ],\r\n    \"tags\": [\r\n      {\r\n        \"id\": 0,\r\n        \"name\": \"string\"\r\n      }\r\n    ],\r\n    \"status\": \"pending\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Error response for invalid ID\", function () {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(pm.response.text()).to.include(\"Invalid ID supplied\");\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Error response for pet not found\", function () {\r",
							"    if (pm.response.code === 404) {\r",
							"        pm.expect(pm.response.text()).to.include(\"Pet not found\");\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Authorization header is provided\", function () {\r",
							"    pm.expect(pm.request.headers.has(\"api_key\")).to.be.true;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "api_key",
						"value": "special-key",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet/9223372036854740000",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet",
						"9223372036854740000"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}